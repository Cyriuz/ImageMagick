file(READ ${CMAKE_SOURCE_DIR}/m4/version.m4 CONTENT_VERSION_M4)

# Parse 'm4_define([magick_library_current], [10])' etc.
function(extract_m4_define var_name)
  string(TOLOWER ${var_name} define_name)
  string(REGEX MATCH "m4_define\\(\\[(${define_name})\\],[ \n]+\\[([^]]+)\\]\\)" FOUND_DEFINE "${CONTENT_VERSION_M4}")
  if(FOUND_DEFINE)
    set(${var_name} ${CMAKE_MATCH_2} PARENT_SCOPE)
  else()
    message(FATAL_ERROR "Could not find ${define_name} in version.m4")
  endif()
endfunction()

extract_m4_define(MAGICK_NAME)
extract_m4_define(MAGICK_MAJOR_VERSION)
extract_m4_define(MAGICK_MINOR_VERSION)
extract_m4_define(MAGICK_MICRO_VERSION)
extract_m4_define(MAGICK_PATCHLEVEL_VERSION)
extract_m4_define(MAGICK_IS_BETA)
extract_m4_define(MAGICK_BUGREPORT)
extract_m4_define(MAGICK_URL)
extract_m4_define(MAGICK_LIB_VERSION)
extract_m4_define(MAGICK_TARNAME)
extract_m4_define(MAGICK_LIBRARY_CURRENT)
extract_m4_define(MAGICK_LIBRARY_REVISION)
extract_m4_define(MAGICK_LIBRARY_AGE)
extract_m4_define(MAGICKPP_LIBRARY_CURRENT)
extract_m4_define(MAGICKPP_LIBRARY_REVISION)
extract_m4_define(MAGICKPP_LIBRARY_AGE)

set(MAGICK_BASE_VERSION ${MAGICK_MAJOR_VERSION}.${MAGICK_MINOR_VERSION}.${MAGICK_MICRO_VERSION})
set(MAGICK_VERSION ${MAGICK_BASE_VERSION}-${MAGICK_PATCHLEVEL_VERSION})
set(MAGICK_LIB_VERSION_NUMBER ${MAGICK_MAJOR_VERSION},${MAGICK_MINOR_VERSION},${MAGICK_MICRO_VERSION},${MAGICK_PATCHLEVEL_VERSION})

set(VERSION ${MAGICK_VERSION})

if(MAGICK_IS_BETA STREQUAL "y")
  set(MAGICK_IS_BETA 1)
  set(PACKAGE_VERSION_ADDENDUM "-${MAGICK_PATCHLEVEL_VERSION} (Beta)")
else()
  set(MAGICK_IS_BETA 0)
  set(PACKAGE_VERSION_ADDENDUM "-${MAGICK_PATCHLEVEL_VERSION}")
endif()

set(PACKAGE ${MAGICK_NAME})
set(PACKAGE_NAME ${MAGICK_NAME})
set(PACKAGE_MAJOR_VERSION ${MAGICK_MAJOR_VERSION})
set(PACKAGE_MINOR_VERSION ${MAGICK_MINOR_VERSION})
set(PACKAGE_MICRO_VERSION ${MAGICK_MICRO_VERSION})
set(PACKAGE_PATCHLEVEL_VERSION ${MAGICK_PATCHLEVEL_VERSION})
set(PACKAGE_IS_BETA ${MAGICK_IS_BETA})
set(PACKAGE_BUGREPORT ${MAGICK_BUGREPORT})
set(PACKAGE_URL ${MAGICK_URL})
set(PACKAGE_LIB_VERSION ${MAGICK_LIB_VERSION})
set(PACKAGE_TARNAME ${MAGICK_TARNAME})
set(PACKAGE_LIBRARY_CURRENT ${MAGICK_LIBRARY_CURRENT})
set(PACKAGE_LIBRARY_REVISION ${MAGICK_LIBRARY_REVISION})
set(PACKAGE_LIBRARY_AGE ${MAGICK_LIBRARY_AGE})
set(PACKAGE_BASE_VERSION ${MAGICK_BASE_VERSION})
set(PACKAGE_VERSION ${MAGICK_VERSION})
set(PACKAGE_LIB_VERSION_NUMBER ${MAGICK_LIB_VERSION_NUMBER})
set(PACKAGE_VERSION_NUMBER ${MAGICK_LIB_VERSION_NUMBER})
set(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")

set(MAGICK_LIB_VERSION_TEXT ${PACKAGE_BASE_VERSION})
set(MAGICKPP_LIB_VERSION_TEXT ${PACKAGE_BASE_VERSION})

# Try to find the date in the format yyyy-mm-dd
file(READ ${CMAKE_SOURCE_DIR}/configure CONTENT_CONFIGURE)
string(REGEX MATCH "\nPACKAGE_RELEASE_DATE=([0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9])\n" FOUND_LAST_CHANGE_DATE "${CONTENT_CONFIGURE}")
if(FOUND_LAST_CHANGE_DATE)
  set(PACKAGE_RELEASE_DATE ${CMAKE_MATCH_1})
else()
  message(FATAL_ERROR "Could not find PACKAGE_RELEASE_DATE in ./configure")
endif()
